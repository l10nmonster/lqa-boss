/* General Body and Container Styling */
body {
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
    margin: 0;
    padding: 0;
    background-color: #f0f2f5;
    color: #1d2129;
    display: flex; /* Make body a flex container */
    flex-direction: column; /* Stack header and content-area vertically */
    min-height: 100vh;
    font-size: 14px;
}

.container {
    /* --- MAKE CONTAINER FULL WIDTH --- */
    width: 100%;         /* Take full viewport width */
    max-width: none;     /* Remove any previous max-width */
    margin: 0;           /* Remove side margins */
    padding: 20px;       /* Keep padding for content */
    box-sizing: border-box; /* Include padding in width calculation */

    background-color: #ffffff;
    /* box-shadow: 0 2px 4px rgba(0,0,0,0.1), 0 8px 16px rgba(0,0,0,0.1); */ /* Optional shadow for full width */
    /* border-radius: 8px; */ /* Optional radius for full width */

    flex-grow: 1; /* Allow container to grow and fill vertical space */
    display: flex;
    flex-direction: column; /* Stack header and content-area */
}

/* Header Styling */
header {
    border-bottom: 1px solid #dddfe2;
    padding-bottom: 15px;
    margin-bottom: 20px;
    display: flex;
    align-items: center;
    gap: 20px;
    flex-shrink: 0; /* Prevent header from shrinking */
}

header h1 {
    margin: 0;
    font-size: 1.5em;
    color: #007bff;
    flex-grow: 1;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

#flowNameInTitle {
    font-weight: normal; /* Make flow name part less bold than main title */
    color: #333; /* Or a different color for distinction */
}

/* File Input Styling - Hide actual input, style the label */
.file-input-container {
    /* No specific styles needed unless for positioning within flex */
    flex-shrink: 0; /* Prevent this container from shrinking */
}

input[type="file"]#fileInput {
    /* --- HIDE THE DEFAULT FILE INPUT --- */
    width: 0.1px;
    height: 0.1px;
    opacity: 0;
    overflow: hidden;
    position: absolute;
    z-index: -1;
}

.file-input-label.button-like {
    display: inline-block; /* Or block, depending on desired layout */
    padding: 10px 18px;
    background-color: #28a745; /* Green for load button, for example */
    color: white;
    border: none;
    border-radius: 6px;
    cursor: pointer;
    font-size: 0.95em;
    font-weight: 600;
    transition: background-color 0.2s ease-in-out;
    text-align: center;
    white-space: nowrap;
}

.file-input-label.button-like:hover {
    background-color: #218838; /* Darker green on hover */
}

button#saveChangesBtn {
    /* Styles remain similar, ensure flex-shrink: 0 if needed */
    flex-shrink: 0;
}

button {
    padding: 10px 18px; /* More padding */
    background-color: #007bff;
    color: white;
    border: none;
    border-radius: 6px;
    cursor: pointer;
    font-size: 0.95em;
    font-weight: 600;
    transition: background-color 0.2s ease-in-out;
}

button:disabled {
    background-color: #e4e6eb; /* Lighter disabled color */
    color: #bcc0c4;
    cursor: not-allowed;
}

button:hover:not(:disabled) {
    background-color: #0056b3; /* Darker on hover */
}

/* Main Content Area Layout */
.content-area {
    display: flex; /* Row layout for screenshot and edit panel */
    gap: 20px;
    flex-grow: 1; /* Takes up remaining vertical space in .container */
    overflow: hidden; /* Important for containing children */
    /* --- Align items to the start vertically by default --- */
    align-items: flex-start;
}

/* Screenshot Section Styling */
#screenshot-section {
    display: flex;
    flex-direction: column; /* Stack nav and screenshotContainer */
    flex-basis: auto;   /* Initial size based on content */
    flex-shrink: 0;   /* Don't shrink this section */
    flex-grow: 0;     /* Don't grow beyond content */
    /* Its width is driven by screenshotContainer's min-content */
    /* Its height will be driven by its content (nav + screenshotContainer) */

    border: 1px solid #dddfe2;
    border-radius: 6px;
    padding: 15px;
    background-color: #f7f8fa;
    overflow: auto; /* Handles both vertical and horizontal scrolling for its content */
    /* --- Add a max-height to prevent it from becoming overly tall if window is huge --- */
    /* max-height: calc(100vh - 150px); /* Example: viewport height minus header/padding */
                                     /* Adjust 150px as needed based on your header/margins */
}

.screenshot-nav {
    flex-shrink: 0; /* Prevent nav from shrinking */
}
.screenshot-nav button {
    padding: 6px 12px; /* Smaller nav buttons */
    font-size: 0.9em;
}
#pageIndicator {
    font-weight: 600; /* Bolder indicator */
    color: #333;
}

#screenshotContainer {
    position: relative;
    width: min-content;
    height: min-content; /* Becomes as tall as the image */
    margin: 0 auto;
    background-color: #e0e0e0;
    display: flex; /* Helps if screenshotImage needs centering, though block usually suffices */
    align-items: center; /* Vertically center image if container is taller (unlikely here) */
    justify-content: center; /* Horizontally center image */
}

#screenshotImage {
    display: block;
    border: 1px solid #bdc1c5;
    /* width and height set by JS */
}

/* Highlight Box Styling */
.highlight-box {
    position: absolute;
    box-sizing: border-box;
    cursor: pointer;
    border: 3px dashed rgba(220, 53, 69, 0.7);
    transition: transform 0.15s ease-out, border-color 0.15s ease-out, box-shadow 0.15s ease-out;
    border-radius: 3px; /* Slightly rounded corners for highlights */
}

.highlight-box:hover {
    background-color: rgba(0, 123, 255, 0.1); /* Light blue semi-transparent hover */
}

.highlight-box.active {
    border-style: solid;
    border-color: rgba(0, 100, 255, 0.9); /* Brighter blue for active */
    background-color: rgba(0, 123, 255, 0.15); /* Slightly darker for active */
    border-width: 4px; /* Slightly thicker active border */
    transform: scale(1.2); /* Smaller, more subtle zoom */
    z-index: 10;
    box-shadow: 0 0 12px rgba(0, 100, 255, 0.4);
}

/* Edit Panel Styling */
#edit-panel-section {
    flex-grow: 1;    /* It will try to take remaining horizontal space */
    flex-shrink: 1;
    flex-basis: 0;   /* Start from 0 and grow horizontally */
    min-width: 350px; /* Your established minimum width */

    display: flex;   /* Make it a flex container for its child #editPanel */
    flex-direction: column; /* Stack content vertically within this panel */

    /* --- HEIGHT CONTROL --- */
    /* We want it to try and match screenshot-section's height but not exceed it
       IF edit-panel-section has reached its own useful min-height.
       This is hard with pure CSS if screenshot-section's height is dynamic.
       Let's start by giving it a min-height and allowing its content to scroll.
       The "not taller than screenshot" part is the tricky CSS bit.
    */
    min-height: 400px; /* A minimum useful height for the editor itself */
                      /* Adjust this value based on your UI needs */
    max-height: 100%;  /* Try to not exceed the height of its flex parent (.content-area) */
                      /* This works if .content-area has a defined height or uses align-items: stretch */


    border: 1px solid #dddfe2;
    border-radius: 6px;
    padding: 15px;
    background-color: #f7f8fa;
    overflow: hidden; /* Parent controls scroll, child #editPanel scrolls its own content */
}

#editPanel {
    flex-grow: 1; /* Allows the list of textareas to grow and fill #edit-panel-section */
    overflow-y: auto; /* This is where the textareas will scroll */
}

#editPanel .edit-item {
    margin-bottom: 12px;
    padding: 12px;
    background-color: #ffffff; /* White background for items */
    border-radius: 6px;
    border: 1px solid #e4e6eb; /* Softer border */
    border-left-width: 4px; /* For the color indicator */
    transition: border-left-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
    position: relative;
}
#editPanel .edit-item.modified {
    border-left-color: #dc3545; /* Red for modified */
}
#editPanel .edit-item.unmodified {
    border-left-color: #28a745; /* Green for unmodified */
}
#editPanel .edit-item.active-segment-editor {
    border-left-color: #007bff; /* Blue for active */
    box-shadow: 0 0 0 2px rgba(0,123,255,.25); /* Focus ring effect */
}

#editPanel .edit-item label { /* Not used in current JS, but good to have if you add them */
    display: block;
    font-weight: 600;
    margin-bottom: 6px;
    font-size: 0.9em;
    color: #4b4f56;
}

#editPanel .edit-item textarea {
    width: 100%;
    padding: 10px;
    border: 1px solid #ccd0d5;
    border-radius: 6px;
    box-sizing: border-box;
    min-height: 50px;
    font-size: 0.95em;
    line-height: 1.4;
    resize: vertical;
}
#editPanel .edit-item textarea:focus {
    border-color: #007bff;
    box-shadow: 0 0 0 2px rgba(0,123,255,.25); /* Matching focus ring */
    outline: none; /* Remove default browser outline */
}

.undo-btn {
    position: absolute;
    top: 8px; /* Adjust positioning */
    right: 8px;
    background: none;
    border: none;
    font-size: 1.2em; /* Slightly larger undo icon */
    cursor: pointer;
    color: #606770;
    padding: 4px;
    line-height: 1; /* Ensure icon aligns well */
}
.undo-btn:hover {
    color: #1d2129; /* Darker on hover */
}

/* Helper if no content */
#editPanel p:only-child {
    color: #606770;
    font-style: italic;
    text-align: center;
    padding: 20px;
}